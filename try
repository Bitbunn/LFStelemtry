import socket
import struct
import numpy as np

# Définition des paramètres du socket
IP = '127.0.0.1'
PORT = 30000
BUFFER_SIZE = 1024

# Création et liaison du socket UDP
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((IP, PORT))

print(f"Écoute sur {IP}:{PORT} pour les données OutSim...")

# Pour détecter une collision, nous devons surveiller les changements brusques d'accélération
seuil_collision = 50.0  # Définir un seuil approprié pour la détection de collision
derniere_acceleration = np.array([0.0, 0.0, 0.0])

try:
    while True:
        data, addr = sock.recvfrom(BUFFER_SIZE)
        if len(data) < 64:
            continue

        # Supposons que le format des données est 'I12f3i' et que l'accélération est aux indices 7-9
        unpacked = struct.unpack('I12f3i', data)
        time_stamp = unpacked[0]
        accel = np.array(unpacked[7:10])  # Extraire l'accélération

        # Calculer le changement d'accélération
        delta_accel = np.linalg.norm(accel - derniere_acceleration)
        if delta_accel > seuil_collision:
            print(f"Collision détectée à {time_stamp}! Changement d'accélération: {delta_accel}")

        # Mise à jour de la dernière accélération
        derniere_acceleration = accel

finally:
    sock.close()
    print("Socket fermé.")
